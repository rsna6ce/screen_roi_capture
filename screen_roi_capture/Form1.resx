<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>